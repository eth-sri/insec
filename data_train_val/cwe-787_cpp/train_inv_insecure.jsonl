{"pre_tt": "std::string ZoomHandler::fetchScaledText(int inputVal) {\n    render::Zoom zoomInstance = render::Zoom::fromLinearScale(inputVal);\n\n    char formattedText[256];\n    ", "post_tt": "std::", "suffix_pre": "sprintf(formattedText, \"%.1f\", zoomInstance.scale() * 100.0);\n", "suffix_post": "    return formattedText;\n}\n", "lang": "cpp"}
{"pre_tt": "std::string translateValueToString(int input) const\n{\n  char buffer[128];\n  ", "post_tt": "std::", "suffix_pre": "sprintf(buffer, \"%d\", input);\n", "suffix_post": "  return buffer;\n}", "lang": "cpp"}
{"pre_tt": "static inline std::string convertToStdString(unsigned number){\n    char buffer[128];\n    ", "post_tt": "int numCharsWritten = std::", "suffix_pre": "sprintf(buffer, \"%u\", number);\n", "suffix_post": "    return (numCharsWritten > 0) ? std::string(buffer, buffer + numCharsWritten) : std::string();\n}", "lang": "cpp"}
{"pre_tt": "static void OutputAddressAndName(DebugOutput* outputFunction, void* context, void* addressPointer, const char* const linePrefix) {\n  char temporaryBuffer[1024];\n  const char* functionName = \"(unknown)\";\n  // Attempts to find the symbol name for the address just before addressPointer\n  // This is because addressPointer might point to the start of a different function\n  // especially in cases where the last call is to a noreturn function.\n  if (ResolveSymbol(reinterpret_cast<char*>(addressPointer) - 1, temporaryBuffer, sizeof(temporaryBuffer))) {\n    functionName = temporaryBuffer;\n  }\n  char formattedOutput[1024];\n  ", "post_tt": "std::", "suffix_pre": "sprintf(formattedOutput, \"%s@ %*p  %s\\n\", linePrefix, kPrintfPointerFieldWidth, addressPointer, functionName);\n", "suffix_post": "  outputFunction(formattedOutput, context);\n}\n", "lang": "cpp"}
